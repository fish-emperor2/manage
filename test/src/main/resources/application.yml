management:
  endpoints:
    web:
      exposure:
        #暴露部分端点
        #        include: info,health,beans,env
        #暴露所有端点
        include: all
        # 不暴露 beans 端点
        #exclude: beans
  endpoint:
    health:
      show-details: always # 显示详细的健康检查信息

  security:
    enabled: false # 关闭管理端点的安全保护


##指定redis信息 (如 host, ip, password)
#spring.redis.host=localhost
#spring.redis.port=6379
##没有密码可以不用配置这个
##spring.redis.password=123456

# 开发环境配置
server:
  # 服务器的HTTP端口，默认为8080
  port: 8080
  servlet:
    # 应用的访问路径
    context-path: /
  tomcat:
    # tomcat的URI编码
    uri-encoding: UTF-8
    # 连接数满后的排队数，默认为100
    accept-count: 1000
    threads:
      # tomcat最大线程数，默认为200
      max: 800
      # Tomcat启动初始化的线程数，默认值10
      min-spare: 100


spring:

  # 资源信息
  datasource:
    url: jdbc:mysql://localhost:3306/yxz?characterEncoding=utf8
    #    driverClassName: com.mysql.jdbc.Driver
    driverClassName: com.mysql.cj.jdbc.Driver
    username: root
    password: 123456

  devtools:
    restart:
      enabled: true  #设置开启热部署
      additional-paths: src/main/java #重启目录
      exclude: WEB-INF/**

  # 资源信息
  # redis 配置
  redis:
    # 地址
    host: localhost
    # 端口，默认为6379
    port: 6379
    # 数据库索引
    database: 0
    # 密码
    password:
    # 连接超时时间
    timeout: 10s
    lettuce:
      pool:
        # 连接池中的最小空闲连接
        min-idle: 0
        # 连接池中的最大空闲连接
        max-idle: 8
        # 连接池的最大数据库连接数
        max-active: 8
        # #连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
file:
  upload-dir: D:/uploads


# MyBatis配置
mybatis:

  # 搜索指定包别名
  typeAliasesPackage: com.zime.test.dao.entity
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath*:mybatis/mappers/*Mapper.xml,classpath*:mybatis/mappers/ext/*MapperExt.xml
  # 加载全局的配置文件
  configLocation: classpath:mybatis/mybatis-config.xml



